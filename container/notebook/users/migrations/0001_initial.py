# Generated by Django 3.2.10 on 2022-02-25 01:26

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(help_text='Имя', max_length=64, verbose_name='Имя')),
                ('parent_name', models.CharField(blank=True, help_text='Отчество', max_length=64, verbose_name='Отчество')),
                ('surname', models.CharField(help_text='Фамилия', max_length=64, verbose_name='Фамилия')),
                ('email', models.EmailField(help_text='E-mail', max_length=254, unique=True, verbose_name='E-mail')),
                ('birthday', models.DateField(help_text='Дата рождения', verbose_name='Дата рождения')),
                ('is_active', models.BooleanField(help_text='Статус', verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Зарегистрирован', verbose_name='Зарегистрирован')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Последнее редактирование', verbose_name='Последнее редактирование')),
                ('role', models.CharField(choices=[('A', 'Administrator'), ('M', 'Manager'), ('D', 'Developer')], help_text='Тип учетной записи', max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
